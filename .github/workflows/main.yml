name: nanuri-backend

env:
  AWS_REGION: ap-northeast-2
  KAKAO_APP_ADMIN_KEY: ${{ secrets.KAKAO_APP_ADMIN_KEY }}

on:
  push:
    branches:
      - "main"
      - "develop"
  pull_request:
    branches:
      - "main"

jobs:
  ci:

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Download p12 certificate
        run: |
          wget https://github.com/aryansbtloe/resources/raw/master/Certificate/certificate.p12
          mv certificate.p12 nanuri-backend/

      - name: Create env file
        run: |
          echo "DJANGO_SETTINGS_MODULE=config.settings.test" > .env
          echo "AWS_REGION=$AWS_REGION" >> .env
          echo "AWS_ENDPOINT_URL=http://localstack:4566" >> .env
          echo "AWS_ACCESS_KEY_ID=test" >> .env
          echo "AWS_SECRET_ACCESS_KEY=test" >> .env
          echo "KAKAO_APP_ADMIN_KEY=$KAKAO_APP_ADMIN_KEY" >> .env
          echo "AWS_SNS_PLATFORM_APPLICATION_ARN=arn:aws:sns:ap-northeast-2:000000000000:app/APNS/TestApplication" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=postgres" >> .env
          echo "POSTGRES_DB=postgres" >> .env
          mv .env nanuri-backend/

      - name: Build the Stack
        run: docker-compose -f local.yml build

      - name: Run DB Migrations
        run: docker-compose -f local.yml run --rm app sh -c "python manage.py migrate"

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          docker-compose -f local.yml run --rm app sh -c "flake8 . --count --select=E9,F63,F7,F82,F401 --show-source --statistics"
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          docker-compose -f local.yml run --rm app sh -c "flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics"

      - name: Run Django Tests
        run: |
          docker-compose -f local.yml run --rm app sh -c "pytest"

      - name: Tear down the Stack
        run: docker-compose -f local.yml down

  cd:
    needs:
      - ci

    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws deploy push \
            --application-name nanuri-backend-django \
            --description "Nanuri Backend Django Application" \
            --ignore-hidden-files \
            --s3-location s3://nanuri-deployment-bucket/app.zip \
            --source .

      - name: Trigger deployment
        run: |
          aws deploy create-deployment \
            --application-name nanuri-backend-django \
            --s3-location bucket=nanuri-deployment-bucket,key=app.zip,bundleType=zip \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name NanuriBackendDjangoDeploymentGroup
